#+TITLE: Damegender: using NLTK and Scikit in a real case
#+AUTHOR: David Arroyo Menéndez
#+OPTIONS: H:2 toc:nil num:t
#+OPTIONS: tex:t
#+LATEX_CLASS: beamer
#+LATEX_CLASS_OPTIONS: [presentation]
#+BEAMER_THEME: Madrid
#+COLUMNS: %45ITEM %10BEAMER_ENV(Env) %10BEAMER_ACT(Act) %4BEAMER_COL(Col) %8BEAMER_OPT(Opt)

* Summary
** Machine Learning is for predictions

+ Quantities
+ Categories (with data training or not)
+ What properties is predicting

** Scikit Graph

file:../src/damegender/files/images/scikit-graph.png

** In classification our data are properties and a variable for the prediction

file:../src/damegender/files/images/naivebayes-table.png

** Practical NLTK
#+BEGIN_SRC bash
$ git clone https://github.com/davidam/GAPLEN.git
$ sudo pip3 install GAPLEN
#+END_SRC

In NLP the machine learning is a classification task:

1. Sentiment Analysis
2. Detect Gender
3. Sentence Similarity
4. Text Summary
5. Classify Documents
6. Manage Words
singulars/plurals, dictionary entries, stopwords
7. Gramatical Trees
8. Extract Keywords
9. Disambiguation

** Now Damegender

[[file:../src/damegender/files/images/gender.png]]

** Name
damegender is a gender detection tool coded by David Arroyo MEnéndez (DAME)

** Why?
+ If you want determine gender gap in free software projects or mailing lists.
+ If you don't know the gender about a name in spanish or english (current status).
+ If you want research with statistics about why a name is related with males or females.
+ If you want use the main solutions in gender detection (genderize,
  genderapi, namsor, nameapi and gender guesser) from a command.

DAMe Gender is for you!

** Installing Software
*** Posible Debian/Ubuntu dependencies
#+BEGIN_SRC 
$ sudo apt-get install python3-nose-exclude dict dict-freedict-eng-spa dict-freedict-spa-eng dictd
#+END_SRC
*** From sources
#+BEGIN_SRC 
$ git clone https://github.com/davidam/damegender
$ cd damegender
$ pip3 install -r requirements.txt
#+END_SRC
*** With python package
#+BEGIN_SRC
$ python3 -m venv /tmp/d
$ cd /tmp/d
$ source bin/activate
$ pip install --upgrade pip
$ pip3 install damegender
$ cd lib/python3.5/site-packages/damegender
$ python3 main.py David
#+END_SRC
** Obtaining an api key

Currently you can need an api key from:
+ https://store.genderize.io/documentation
+ https://gender-api.com
+ https://www.nameapi.org/

You can execute:
#+BEGIN_SRC
$ python3 apikeyadd.py
#+END_SRC
To configure your api key

** Configuring nltk

#+BEGIN_SRC sh
$ python3
>>> import nltk
>>> nltk.download('names')
#+END_SRC


** Checking All tests
#+BEGIN_SRC sh
$ nosetest3 test
#+END_SRC
** Checking Single test
#+BEGIN_SRC sh
$ nosetests3 test/test_dame_sexmachine.py:TddInPythonExample.test_string2array_method_returns_correct_result
#+END_SRC

** Execute program

*** Detect gender from a name (INE is the dataset used by default)
$ python3 main.py David

David gender is male
363559  males for David from INE.es
0 females for David from INE.es

*** Detect gender from a name from multiple dataset
$ python3 main.py David --total="all"

David gender is male
375099 males and 9 females from all census (INE + Uk census + USA census)

*** Detect gender from a name only using machine learning (experimental way)
$ python3 main.py Mesa --ml=nltk

Mesa gender is female
0 males for Mesa from INE.es
0 females for Mesa from INE.es

** Detecting gender in mailing lists and repositories

*** Count gender from a git repository
$ python3 git2gender.py https://github.com/chaoss/grimoirelab-perceval.git --directory="/tmp/clonedir"

The number of males sending commits is 15
The number of females sending commits is 7

*** Count gender from a mailing list
$ cd files/mbox

$ wget -c http://mail-archives.apache.org/mod_mbox/httpd-announce/201706.mbox

$ cd ..

$ python3 mail2gender.py http://mail-archives.apache.org/mod_mbox/httpd-announce/

** Using external tools to detect gender

*** Use an api to detect the gender
$ python3 api2gender.py Leticia --surname="Martin" --api=namsor

female
scale: 0.99

*** Google popularity for a name
$ python3 gendergoogle.py Leticia

Google results of Leticia as male: 42300
Google results of Leticia as female: 63400


** Give me informative features

$ python3 infofeatures.py

Females with last letter a: 0.4705246078961601

Males with last letter a: 0.048672566371681415

Females with last letter consonant: 0.2735841767750908

Males with last letter consonant: 0.6355328972681801

Females with last letter vocal: 0.7262612995441552

Males with last letter vocal: 0.3640823393612928

** To measure success
*** Damengeder
$ python3 accuracy.py --csv=files/names/min.csv

Gender list: [1, 1, 1, 1, 2, 1, 0, 0]
Guess list:  [1, 1, 1, 1, 0, 1, 0, 0]
Dame Gender accuracy: 0.875
*** Genderize
$ python3 accuracy.py --api="genderize" --csv=files/names/min.csv

Gender list: [1, 1, 1, 1, 2, 1, 0, 0]
Guess list:  [1, 1, 1, 1, 2, 1, 0, 0]
Genderize accuracy: 1

** Confusion

*** Namsor

$ python3 confusion.py --api="namsor" 

[[ 2, 0, 0]

 [ 0, 5, 0]]

** Benchmark

file:comparison-tables.png

** Damegender Market Study

|                                        | damegender      | gender api        | gender guesser | genderize               | name api                    | namsor                    |
| Database size                          | 60000           | 1877787           | 45376          | 216286                  | 510000                      | 1300000                   |
| Regular data updates                   | yes, developing | yes               | no             | yes                     | yes                         | yes                       |
| Handles unstructured full name strings | yes             | yes               | no             | no                      | yes                         | no                        |
| Handles surnames                       | yes             | yes               | no             | no                      | yes                         | yes                       |
| Handles non-Latin alphabets            | no              | partially         | no             | partially               | yes                         | yes                       |
| Implicit geo-localization              | no              | no                | no             | no                      | yes                         | yes                       |
| Assingment type                        | binary          | probabilistic     | binary         | probabilistic           | probabilistic               | probabilistic             |
| Free parameters                        | -               | accuracy, samples | -              | probability             | confidence                  | scale                     |
| Free license                           | yes             | no                | yes            | no                      | no                          | no                        |
| API                                    | future          | yes               | no             | yes                     | yes                         | yes                       |
| Monthly free requests                  | free license    | 500               | free license   | Free for 1000 names/day | Free for 1000 credits/month | Free for 5000 names/month |

** Accuracies

|                |           Accuracy |
| Namsor         | 0.7539570378745054 |
| Genderize      | 0.715375918598078  |
| Gender Guesser | 0.6902204635387225 |
| Dame Gender    | 0.6677501413227812 |

** Machine Learning Algorithms and DameGender
These results are experimental, we are improving the choosing of features.

+ Stochastic Gradient Descendent accuracy: 0.5873374788015828
+ Support Vector Machines accuracy: 0.7049180327868853
+ Gaussian Naive Bayes accuracy: 0.5960994912379876
+ Multinomial Naive Bayes accuracy: 0.5876201243640475
+ Bernoulli Naive Bayes accuracy: 0.5962408140192199
+ Dame Gender (nltk bayes) accuracy: 0.6677501413227812


** License
This document is under a [[http://creativecommons.org/licenses/by/4.0/deed][Creative Commons Attribution 4.0 International]]

