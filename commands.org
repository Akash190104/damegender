
* Check test
** All unit tests
#+BEGIN_SRC sh
$ nosetest3 test
#+END_SRC
*** Using Docker image
#+BEGIN_SRC sh
$ docker run -ti --entrypoint nosetests damegender/damegender:latest test
#+END_SRC
** Single unit test
#+BEGIN_SRC sh
$ nosetests3 test/test_dame_sexmachine.py:TddInPythonExample.test_string2array_method_returns_correct_result
#+END_SRC
*** Using Docker image
#+BEGIN_SRC sh
$ docker run -ti --entrypoint nosetests damegender/damegender:latest test/test_dame_sexmachine.py:TddInPythonExample.test_string2array_method_returns_correct_result
#+END_SRC
** Tests from commands
#+BEGIN_SRC sh
$ cd src/damegender
$ ./testsbycommands.sh         # It must run for you
$ ./testsbycommandsextralocal.sh    # You will need all dependencies with: $ pip3 install damegender[all]
$ ./testsbycommandsextranet.sh    # You will need api keys
#+END_SRC

You can find an extense list of commands to execute this shell
scripts. Now a detailed execution of some selected examples:

* Execute the program

#+BEGIN_SRC sh
# Detect gender from a name (INE is the dataset used by default)
$ python3 main.py David
David gender is male
 363559  males for David from INE.es
0 females for David from INE.es

# Detect gender from a name only using machine learning (experimental way)
$ python3 main.py Mesa --ml=nltk
Mesa gender is female
0 males for Mesa from INE.es
0 females for Mesa from INE.es

# Detect gender from a name (all census and machine learning)
$ python3 main.py David --verbose
365196 males for David from INE.es
0 females for David from INE.es
1193 males for David from Uruguay census
5 females for David from Uruguay census
26645 males for David from United Kingdom census
0 females for David from United Kingdom census
3552580 males for David from United States of America census
12826 females for David from United States of America census
David gender predicted with nltk is male
David gender predicted with sgd is male
David gender predicted with svc is male
David gender predicted with gaussianNB is male
David gender predicted with multinomialNB is male
David gender predicted with bernoulliNB is male
David gender predicted with forest is male
David gender predicted with tree is male
David gender predicted with mlp is male

# Find your name in different countries
$ python3 nameincountries.py David
grep -i " David " files/names/nam_dict.txt > files/grep.tmp
males: ['Albania', 'Armenia', 'Austria', 'Azerbaijan', 'Belgium', 'Bosnia and Herzegovina', 'Czech Republic', 'Denmark', 'East Frisia', 'France', 'Georgia', 'Germany', 'Great Britain', 'Iceland', 'Ireland', 'Israel', 'Italy', 'Kazakhstan/Uzbekistan', 'Luxembourg', 'Malta', 'Norway', 'Portugal', 'Romania', 'Slovenia', 'Spain', 'Sweden', 'Swiss', 'The Netherlands', 'USA', 'Ukraine']
females: []
both: []

# Count gender from a git repository
$ python3 git2gender.py https://github.com/chaoss/grimoirelab-perceval.git --directory="/tmp/clonedir"
The number of males sending commits is 15
The number of females sending commits is 7

# Count gender from a mailing list
$ cd files/mbox
$ wget -c http://mail-archives.apache.org/mod_mbox/httpd-announce/201706.mbox
$ cd ..
$ python3 mail2gender.py http://mail-archives.apache.org/mod_mbox/httpd-announce/

# Use an api to detect the gender
$ python3 api2gender.py Leticia --surname="Martin" --api=namsor
female
scale: 0.99

# Google popularity for a name
$ python3 gendergoogle.py Leticia
Google results of Leticia as male: 42300
Google results of Leticia as female: 63400

# Give me informative features
$ python3 infofeatures.py
Females with last letter a: 0.4705246078961601
Males with last letter a: 0.048672566371681415
Females with last letter consonant: 0.2735841767750908
Males with last letter consonant: 0.6355328972681801
Females with last letter vocal: 0.7262612995441552
Males with last letter vocal: 0.3640823393612928

# Download results from an api and save in a file
$ python3 downloadjson --csv=files/names/min.csv --api=genderize
$ cat files/names/genderizefiles_names_min.csv.json

# To measure success
$ python3 accuracy.py --csv=files/names/min.csv
################### NLTK!!
Gender list: [1, 1, 1, 1, 2, 1, 0, 0]
Guess list:  [1, 1, 1, 1, 0, 1, 0, 0]
Dame Gender accuracy: 0.875

$ python3 accuracy.py --api="genderize" --csv=files/names/min.csv
################### Genderize!!
Gender list: [1, 1, 1, 1, 2, 1, 0, 0]
Guess list:  [1, 1, 1, 1, 2, 1, 0, 0]
Genderize accuracy: 1

$ python3 confusion.py --csv="files/names/partial.csv" --api=nameapi --jsondownloaded="files/names/nameapifiles_names_partial.csv.json"
A confusion matrix C is such that Ci,j is equal to the number of observations known to be in group i but predicted to be in group j.
If the classifier is nice, the diagonal is high because there are true positives
Nameapi confusion matrix:

[[ 3, 0, 0]
 [ 0, 15, 1]]


# To analyze errors guessing names from a csv
$ python3 errors.py --csv="files/names/all.csv" --api="genderguesser"
Gender Guesser with files/names/all.csv has:
+ The error code: 0.22564457518601835
+ The error code without na: 0.026539047204698716
+ The na coded: 0.20453365634192766
+ The error gender bias: 0.0026103980857080703

# To deploy a graph about correlation between variables
$ python3 corr.py
$ python3 corr.py --csv="categorical"
$ python3 corr.py --csv="nocategorical"
# To create files from scripts. Example: the pickle models, or csv processed from original files.
$ python3 postinstall.py
# Experiments to determine features with weight (not finished)
$ python3 pca-components.py --csv="files/features_list.csv" # To determine number of components
$ python3 pca-features.py                                   # To understand the weight between variables for a target

# Counting surnames
$ python3 surname.py Gil --total=es
There are 140004 people using Gil in Spain

$ python3 surname.py Lenon --total=us
There are 837 people using Lenon in United States of America

# Measuring Ethnicity of surnames
$ python3 ethnicity.py Smith
In United States of America the percentages about the race of Smith surname is:
White: 73.35
Black: 22.22
Hispanic: 1.56
Asian Pacific Indian American: 0.40
American Indian and Alaska Native: 0.85
Various races: 1.63
#+END_SRC


* Benchmarking
** Market Study

|                                        | Gender API               | gender-guesser | genderize.io       | NameAPI       | NamSor        | damegender         |
| Database size                          | 431322102                | 45376          | 114541298          | 1428345       | 4407502834    | 57282              |
| Regular data updates                   | yes                      | no             | no                 | yes           | yes           | yes, developing    |
| Handles unstructured full name strings | yes                      | no             | no                 | yes           | no            | yes                |
| Handles surnames                       | yes                      | no             | no                 | yes           | yes           | yes                |
| Handles non-Latin alphabets            | partially                | no             | partially          | yes           | yes           | no                 |
| Implicit geo-localization              | yes                      | no             | no                 | yes           | yes           | no                 |
| Exists locale                          | yes                      | yes            | yes                | yes           | yes           | yes                |
| Assingment type                        | probilistic              | binary         | probabilistic      | probabilistic | probabilistic | probabilistic      |
| Free parameters                        | total_names, probability | gender         | probability, count | confidence    | scale         | total_names, count |
| Prediction                             | no                       | no             | no                 | no            | no            | yes                |
| Free license                           | no                       | yes            | no                 | no            | no            | yes                |
| API                                    | yes                      | no             | yes                | yes           | yes           | future             |
| free requests limited                  | yes (200)                | unlimited      | yes                | yes           | yes           | unlimited          |

(Checked: 2019/06/27)

** Accuracy

| Name           |           Accuracy |          Precision |            F1score | Recall |
| Genderapi      | 0.9687686966482124 | 0.9717050018254838 | 0.9637877964874163 |    1.0 |
| Genderize      |           0.926775 | 0.9761303240374678 | 0.9655113956503119 |    1.0 |
| Namsor         | 0.8672551055728626 | 0.9730097087378641 | 0.9236866359447006 |    1.0 |
| Nameapi        | 0.8301886792452831 |   0.97420272191753 | 0.9054181612233341 |    1.0 |
| Gender Guesser | 0.7743554248139817 | 0.9848151408450704 | 0.8715900233826968 |    1.0 |

(Checked: 2019/10 until 2019/12)

These accuracies has been measured thinking in Lucía Santamaría and
Helena Mihaljevic dataset as base of truth.

** Accuracy (Damegender ML)

| Name          | Accuracy | Precision | F1score | Recall |
| SVC           |    0.879 |     0.972 |   0.972 |    1.0 |
| Random Forest |    0.862 |     0.902 |   0.902 |    1.0 |
| NLTK (Bayes)  |    0.862 |     0.902 |   0.902 |    1.0 |
| MultinomialNB |    0.782 |     0.791 |   0.791 |    1.0 |
| Tree          |    0.764 |     0.821 |   0.796 |    1.0 |
| SGD           |    0.709 |     0.943 |   0.815 |    1.0 |
| GaussianNB    |    0.709 |     0.968 |   0.887 |    1.0 |
| BernoulliNB   |    0.699 |     0.965 |   0.816 |    1.0 |
| MLP           |    0.677 |     0.819 |   0.755 |    1.0 |
|

In Damegender we are using the next datasets:
+ INE.es (Spain)
+ USA
+ United Kingdom
+ Uruguay

We hope better results with more languages.

Machine Learning Algorithms in DameGender
These results are experimental, we are improving the choosing of features.

** Confusion Matrix
**** GenderApi
 | ...    | male | female | undefined |
 | male   | 3589 |    155 |        67 |
 | female |  211 |   1734 |        23 |
**** Genderguesser
 | ...    | male | female | undefided |
 | male   | 3326 |    139 |       346 |
 | female | 78   |   1686 |       204 |

**** Genderize
 | ...    | male | female | undefined |
 | male   | 3157 |    242 |       412 |
 | female |   75 |   1742 |       151 |

**** Namsor

 | ...    | male | female | undefined |
 | male   | 3325 |    139 |       346 |
 | female |   78 |   1686 |       204 |

**** Nameapi

 | ...    | male | female | undefined |
 | male   | 2627 |    674 |       507 |
 | female |  667 |   1061 |       240 |

**** Dame Gender

 | ...    | male | female | undefined |
 | male   | 3033 |    778 |         0 |
 | female |  276 |   1692 |         0 |

In this version of Dame Gender, we are not considering decide names as
undefined.

** Errors with files/names/all.csv has:

| API            |          error code | error code without na |            na coded |    error gender bias |
| Genderize      |              0.0727 |                 0.053 |                0.02 |               -0.008 |
| Damegender     |  0.2547594323295258 |    0.2547594323295258 |                 0.0 | -0.04949809622706819 |
| GenderApi      | 0.16666666666666666 |   0.16666666666666666 |                 0.0 | -0.16666666666666666 |
| Gender Guesser |  0.2255105572862582 |  0.026962383126766687 | 0.20404984423676012 |   0.0030441400304414 |
| Namsor         | 0.16666666666666666 |   0.16666666666666666 |                 0.0 |  0.16666666666666666 |
| Nameapi        |               0.361 |                 0.267 |               0.129 |                0.001 |

** Performance
These performance metrics requires and csv json downloaded
################### Damegender!!
Gender list: [1, 1, 1, 1, 1, 0]
Guess list:  [1, 1, 1, 1, 1, 0]
Damegender accuracy: 1.0

real	0m1.270s
user	0m0.876s
sys	0m0.416s
################### Genderize!!
Gender list: [1, 1, 1, 1, 1, 0]
Guess list:  [1, 1, 1, 1, 1, 0]
Genderize accuracy: 1.0

real	0m0.811s
user	0m0.776s
sys	0m0.312s
################### Genderapi!!
Gender list: [1, 1, 1, 1, 1, 0]
Guess list:  [1, 1, 1, 1, 1, 0]
Genderapi accuracy: 1.0

real	0m0.763s
user	0m0.744s
sys	0m0.232s
################### Namsor!!
Gender list: [1, 1, 1, 1, 1, 0]
Guess list:  [1, 1, 1, 1, 1, 0]
Namsor accuracy: 1.0

real	0m0.811s
user	0m0.776s
sys	0m0.356s
################### Nameapi!!
Gender list: [1, 1, 1, 1, 1, 0]
Guess list:  [1, 1, 1, 1, 1, 0]
Nameapi accuracy: 1.0

real	0m0.832s
user	0m0.816s
sys	0m0.336s
A confusion matrix C is such that Ci,j is equal to the number of observations known to be in group i but predicted to be in group j.
If the classifier is nice, the diagonal is high because there are true positives
Damegender confusion matrix:

[[ 5, 0, 0 ]
 [ 0, 1, 0 ]]

real	0m0.812s
user	0m0.784s
sys	0m0.300s
Damegender with files/names/partial.csv has:
+ The error code: 0.10526315789473684
+ The error code without na: 0.10526315789473684
+ The na coded: 0.0
+ The error gender bias: 0.0

real	0m9.099s
user	0m9.008s
sys	0m0.412s


