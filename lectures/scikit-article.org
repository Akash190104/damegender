#+TITLE: Scikit from the article
#+AUTHOR: David Arroyo Menéndez
#+OPTIONS: H:2 toc:nil num:t
#+LATEX_CLASS: beamer
#+LATEX_CLASS_OPTIONS: [presentation]
#+BEAMER_THEME: Madrid
#+COLUMNS: %45ITEM %10BEAMER_ENV(Env) %10BEAMER_ACT(Act) %4BEAMER_COL(Col) %8BEAMER_OPT(Opt)

* Summary
** Presentation

Scikit-learn: Machine Learning in Python
+ Fabian Pedregosa
+ Gaël Varoquaux
+ Alexandre Gramfort
+ Vincent Michel
+ Bertrand Thirion
+ More

URL: http://www.jmlr.org/papers/v12/pedregosa11a.html
Citations: 15926

** Abstract

Scikit-learn is a *Python* module integrating a wide range of
state-of-the-art *machine learning algorithms* for medium-scale
supervised and unsupervised problems. This package focuses on bringing
machine learning to non-specialists using a general-purpose high-level
language. *Emphasis* is put on ease of use, performance, documentation,
and API consistency. It has minimal dependencies and is distributed
under the simplified *BSD license*, encouraging its use in both academic
and commercial settings. *Source code*, binaries, and documentation can
be downloaded from http://scikit-learn.sourceforge.net.

** Introducción
+ Lenguaje de programación Python
+ Qué hace. Necesidad de hacerlo
+ No gap en "context + gap + technical solution"

*** Context
The Python programming language is establishing itself as one of the
most popular languages for scientific computing. Thanks to its
high-level interactive nature and its maturing ecosystem of scientific
libraries, it is an appealing choice for algorithmic development and
exploratory data analysis (Dubois, 2007; Milmann and Avaizis,
2011). Yet, as a general-purpose language, it is increasingly used not
only in academic settings but also in industry.
*** Tecnical Solution
Scikit-learn harnesses this rich environment to provide state-of-the-art implementations of many
well known machine learning algorithms, while maintaining an easy-to-use interface tightly inte-
grated with the Python language. This answers the growing need for statistical data analysis by
non-specialists in the software and web industries, as well as in fields outside of computer-science,
such as biology or physics. Scikit-learn differs from other machine learning toolboxes in Python
for various reasons: i) it is distributed under the BSD license ii) it incorporates compiled code for
efficiency, unlike MDP (Zito et al., 2008) and pybrain (Schaul et al., 2010), iii) it depends only on
numpy and scipy to facilitate easy distribution, unlike pymvpa (Hanke et al., 2009) that has optional
dependencies such as R and shogun, and iv) it focuses on imperative programming, unlike pybrain
which uses a data-flow framework. While the package is mostly written in Python, it incorporates
the C++ libraries LibSVM (Chang and Lin, 2001) and LibLinear (Fan et al., 2008) that provide ref-
erence implementations of SVMs and generalized linear models with compatible licenses. Binary
packages are available on a rich set of platforms including Windows and any POSIX platforms.

** Project Vision
En NLTK es Design Criteria, pero el enfoque es diferente
+ Code Qualitiy
+ BSD Licensing
+ Bare-bone design and API
+ Community-driven development
+ Documentation
** Underlying Technologies
Este apartado no lo tiene NLTK, pero me parece muy interesante
+ Numpy
+ Scipy
+ Cython
** Code Design
+ Objects specified by interface, not by inheritance
+ Benchmarking between another machine learning tools
+ Model Selection: cross-validation (GridSearch and Lasso).
Pipeline can combine several transformers
** High-level yet Efficient: Some Trade Offs
+ SVM
+ LARS
+ Elastic Net
+ kNN
+ PCA
** Conclusion
+ Resumen de secciones
+ Qué hace el software
+ Future work
